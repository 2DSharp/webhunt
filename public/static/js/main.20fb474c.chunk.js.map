{"version":3,"sources":["utils/axiosInstance.js","components/Login.js","components/Answer.js","components/Question.js","components/CheatcodeInput.js","components/Level.js","components/Navbar.js","components/Footer.js","components/Leaderboard.js","components/titleChange/FirstPage.js","components/titleChange/SecondPage.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","timeout","Title","Typography","withRouter","props","onFinish","values","a","id","password","url","method","data","success","toast","position","POSITION","TOP_CENTER","autoClose","setTimeout","history","push","error","justify","align","style","height","span","level","marginBottom","name","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Answer","setQuestion","answer","display","alignItems","justifyContent","Question","question","dangerouslySetInnerHTML","__html","top","left","transform","color","size","Zoom","cssTransition","enter","exit","duration","CheatcodeInput","React","useState","inp","setInp","transition","TOP_LEFT","value","onChange","e","target","width","disabled","Level","points","setPoints","setLevel","fetchQuestion","res","console","log","html","length","useEffect","Helmet","margin","fontSize","Text","pathname","location","theme","mode","lineHeight","padding","key","marginRight","to","Footer","Layout","Footerr","bottom","HeartFilled","Leaderboard","setData","fetchLeaderboard","setInterval","marginTop","map","leaders","JSON","stringify","FirstPage","href","status","title","subTitle","extra","App","exact","path","component","Login","SecondPage","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.20fb474c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://172.18.121.61',\r\n    timeout: 2000\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport { Form, Input, Button, Row, Col, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from '../utils/axiosInstance';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login = (props) => {\r\n    const onFinish = async (values) => {\r\n        const { id, password } = values;\r\n        const res = await axios({\r\n            url: `/login?id=${id}&pass=${password}`,\r\n            method: 'get'\r\n        });\r\n        if (res.data.success) {\r\n            toast.success(\r\n                'Login Successful! \\n You will be redirected in a second',\r\n                {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 1500\r\n                }\r\n            );\r\n            return setTimeout(() => {\r\n                props.history.push('/level');\r\n            }, 1000);\r\n        } else {\r\n            return toast.error('Invalid login details', {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row justify='center' align='middle' style={{ height: '100vh' }}>\r\n            <Col span={8}>\r\n                <Title level={2} style={{ marginBottom: '2rem' }}>\r\n                    Login\r\n                </Title>\r\n                <Form\r\n                    name='normal_login'\r\n                    className='login-form'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}>\r\n                    <Form.Item\r\n                        name='id'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Login ID!'\r\n                            }\r\n                        ]}>\r\n                        <Input\r\n                            prefix={\r\n                                <UserOutlined className='site-form-item-icon' />\r\n                            }\r\n                            placeholder='Login ID'\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name='password'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Password!'\r\n                            }\r\n                        ]}>\r\n                        <Input\r\n                            prefix={\r\n                                <LockOutlined className='site-form-item-icon' />\r\n                            }\r\n                            type='password'\r\n                            placeholder='Password'\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType='submit'\r\n                            className='login-form-button'>\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import React from 'react';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from '../utils/axiosInstance';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const Answer = ({ setQuestion }) => {\r\n    const onFinish = async (values) => {\r\n        const { answer } = values;\r\n        const res = await axios({\r\n            url: `/go?answer=${answer}`,\r\n            method: 'get'\r\n        });\r\n        if (res.data.success) {\r\n            setQuestion('');\r\n            return toast.success('You answered correctly!', {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500\r\n            });\r\n        } else {\r\n            return toast.error('Incorrect answer!', {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1500\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row justify='center' align='middle'>\r\n            <Col span={8}>\r\n                <Form\r\n                    name='normal_login'\r\n                    className='login-form'\r\n                    onFinish={onFinish}>\r\n                    <Form.Item\r\n                        name='answer'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'You cannot submit an empty answer.'\r\n                            }\r\n                        ]}>\r\n                        <Input\r\n                            prefix={\r\n                                <UserOutlined className='site-form-item-icon' />\r\n                            }\r\n                            placeholder='Type your answer here'\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                            <Button\r\n                                type='primary'\r\n                                htmlType='submit'\r\n                                className='login-form-button'>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const Question = (props) => {\r\n    const { question } = props;\r\n    if (!question) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%,-50%)',\r\n                    color: '#fff'\r\n                }}>\r\n                <h3>Loading...</h3>\r\n                <Spin size='large' />\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div dangerouslySetInnerHTML={{ __html: question }}></div>;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Input, Form } from 'antd';\r\nimport { toast, cssTransition } from 'react-toastify';\r\nimport axios from '../utils/axiosInstance';\r\n\r\nconst Zoom = cssTransition({\r\n    enter: 'zoomIn',\r\n    exit: 'zoomOut',\r\n    duration: [500, 800]\r\n});\r\n\r\nexport const CheatcodeInput = () => {\r\n    const [inp, setInp] = React.useState('');\r\n\r\n    const onFinish = async () => {\r\n        if (inp === '') {\r\n            return toast('MULTIPLE TAB ACCESS DENIED. CONTACT SDC');\r\n        }\r\n        const res = await axios({\r\n            url: `/cheat?code=${inp}`,\r\n            method: 'get'\r\n        });\r\n        if (res.data.success) {\r\n            setInp('');\r\n            return toast('Cheat Activated', {\r\n                transition: Zoom,\r\n                autoClose: 5000,\r\n                className: 'notif',\r\n                position: toast.POSITION.TOP_LEFT\r\n            });\r\n        } else {\r\n            setInp('');\r\n            return toast('Almost there', {\r\n                transition: Zoom,\r\n                autoClose: 2000,\r\n                className: 'notif',\r\n                position: toast.POSITION.TOP_LEFT\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onFinish={onFinish}>\r\n                <Input\r\n                    value={inp}\r\n                    onChange={(e) => setInp(e.target.value)}\r\n                    placeholder='I feel so disabled'\r\n                    style={{ width: '10%' }}\r\n                    disabled\r\n                />\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Col, Row, Typography } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Answer } from './Answer';\r\nimport { Question } from './Question';\r\nimport { CheatcodeInput } from './CheatcodeInput';\r\nimport axios from '../utils/axiosInstance';\r\n\r\nexport const Level = () => {\r\n    const [question, setQuestion] = React.useState('');\r\n    const [points, setPoints] = React.useState(0);\r\n    const [level, setLevel] = React.useState(0);\r\n\r\n    const fetchQuestion = async () => {\r\n        const res = await axios({\r\n            url: '/question',\r\n            method: 'get'\r\n        })\r\n      console.log(res.data);\r\n        if (res.data.html.length > 0) {\r\n            setQuestion(res.data.html);\r\n            setPoints(res.data.points);\r\n            setLevel(res.data.level);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetchQuestion();\r\n    }, [question,points,level]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>WebHunt 2.0</title>\r\n            </Helmet>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    margin: '2.5rem 6.5rem',\r\n                    fontSize: '24px'\r\n                }}>\r\n                <Typography.Text type='disabled'>\r\n                    Level : {level}\r\n                </Typography.Text>\r\n                <Typography.Text type='disabled'>\r\n                    Points : {points}\r\n                </Typography.Text>\r\n            </div>\r\n            <Row justify='center' align='middle' style={{ height: '70vh' }}>\r\n                {level === 7 ? <div>Show some shit</div> : null}\r\n                <Col span={16}>\r\n                    <Question question={question} />\r\n                    <Answer setQuestion={setQuestion} />\r\n                </Col>\r\n            </Row>\r\n            <CheatcodeInput />\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    const {\r\n        location: { pathname }\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <Menu\r\n                theme='dark'\r\n                mode='horizontal'\r\n                style={{\r\n                    lineHeight: '64px',\r\n                    display: 'flex',\r\n                    padding: '0 1.5rem'\r\n                }}>\r\n                <Menu.Item\r\n                    key='1'\r\n                    style={{\r\n                        fontSize: '26px',\r\n                        color: '#fff',\r\n                        marginRight: 'auto'\r\n                    }}>\r\n                    WebHunt 2.0\r\n                </Menu.Item>\r\n                <Menu.Item key='2' style={{ fontSize: '16px', color: '#fff' }}>\r\n                    <NavLink to='/leader'>Leaderboard</NavLink>\r\n                </Menu.Item>\r\n                {pathname === '/leader' ? (\r\n                    <Menu.Item\r\n                        key='3'\r\n                        style={{ fontSize: '16px', color: '#fff' }}>\r\n                        <NavLink to='/level'>Go back</NavLink>\r\n                    </Menu.Item>\r\n                ) : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { HeartFilled } from '@ant-design/icons';\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport const Footerr = () => {\r\n    return (\r\n        <Footer style={{ position: 'sticky', bottom: '0' }}>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}>\r\n                Made with &nbsp; <HeartFilled /> &nbsp; by OSC and null Chapter\r\n            </div>\r\n        </Footer>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Row, Col, Typography, Spin } from 'antd';\r\nimport axios from '../utils/axiosInstance';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Leaderboard = () => {\r\n    const [data, setData] = React.useState(null);\r\n\r\n    const fetchLeaderboard = async () => {\r\n        const res = await axios({\r\n            url: '/leaderboard',\r\n            method: 'get'\r\n        });\r\n        if (res.data.length > 0) {\r\n            setData(res.data);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetchLeaderboard();\r\n        setInterval(() => {\r\n            fetchLeaderboard();\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <Row justify='center' style={{ height: '85vh' }}>\r\n            <Col span={20}>\r\n                <Title style={{ marginTop: '2rem' }}>Leaderboard</Title>\r\n                {data && data.length > 0 ? (\r\n                    <div>\r\n                        {data.map((leaders) => {\r\n                            return (\r\n                                <div key={JSON.stringify(leaders)}>\r\n                                    {JSON.stringify(leaders)}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            transform: 'translate(-50%,-50%)',\r\n                            color: '#fff'\r\n                        }}>\r\n                        <h3>Loading...</h3>\r\n                        <Spin size='large' />\r\n                    </div>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport const FirstPage = () => {\r\n    return (\r\n        <div>\r\n            <a href='/p2'>Click me!</a>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Result, Button } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst SecondPage = (props) => {\r\n    const {\r\n        location: { pathname }\r\n    } = props;\r\n    console.log(pathname);\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                {pathname === '/p2' ? <title>A</title> : null}\r\n                {pathname === '/p3' ? <title>An</title> : null}\r\n                {pathname === '/p4' ? <title>Ans</title> : null}\r\n                {pathname === '/p5' ? <title>Answ</title> : null}\r\n                {pathname === '/p6' ? <title>Answe</title> : null}\r\n                {pathname === '/p7' ? <title>Answer</title> : null}\r\n            </Helmet>\r\n            <Button\r\n                type='primary'\r\n                style={{\r\n                    transform: 'translate(2rem,2rem)'\r\n                }}>\r\n                <Link\r\n                    to='/level'\r\n                    style={{\r\n                        color: '#fff'\r\n                    }}>\r\n                    Go back to question\r\n                </Link>{' '}\r\n            </Button>\r\n            <Result\r\n                style={{ height: '85vh' }}\r\n                status='404'\r\n                title='404'\r\n                subTitle='Sorry, the page you visited does not exist.'\r\n                extra={\r\n                    <Button type='primary'>\r\n                        {pathname === '/p2' ? (\r\n                            <a to='/p3'>Refresh</a>\r\n                        ) : null}\r\n                        {pathname === '/p3' ? (\r\n                            <Link to='/p4'>Refresh</Link>\r\n                        ) : null}\r\n                        {pathname === '/p4' ? (\r\n                            <Link to='/p5'>Refresh</Link>\r\n                        ) : null}\r\n                        {pathname === '/p5' ? (\r\n                            <Link to='/p6'>Refresh</Link>\r\n                        ) : null}\r\n                        {pathname === '/p6' ? (\r\n                            <Link to='/p7'>Refresh</Link>\r\n                        ) : null}\r\n                        {pathname === '/p7' ? (\r\n                            <Link to='/level'>Go back to question</Link>\r\n                        ) : null}\r\n                    </Button>\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(SecondPage);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Login from './components/Login';\nimport { Level } from './components/Level';\nimport Navbar from './components/Navbar';\nimport { Footerr } from './components/Footer';\nimport { Leaderboard } from './components/Leaderboard';\nimport { FirstPage } from './components/titleChange/FirstPage';\nimport SecondPage from './components/titleChange/SecondPage';\n\nfunction App() {\n    return (\n        <div>\n            <ToastContainer />\n            <BrowserRouter>\n                <Navbar />\n                <Switch>\n                    <Route exact path='/' component={Login} />\n                    <Route exact path='/level' component={Level} />\n                    <Route exact path='/leader' component={Leaderboard} />\n                    <Route exact path='/test' component={FirstPage} />\n                    <Route\n                        exact\n                        path={['/p2', '/p3', '/p4', '/p5', '/p6', '/p7']}\n                        component={SecondPage}\n                    />\n                </Switch>\n            </BrowserRouter>\n            <Footerr />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.dark.min.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}